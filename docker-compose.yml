version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: restart-life-api:latest
    container_name: restart-life-api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - CONFIG_ENV=docker
    volumes:
      - ./logs:/app/logs
      - ./configs:/app/configs:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - restart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: restart-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: restart_life_dev
      MYSQL_USER: restart_user
      MYSQL_PASSWORD: restart_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d:ro
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
      - ./migrations:/migrations:ro
    networks:
      - restart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: restart-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis:/usr/local/etc/redis:ro
    networks:
      - restart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Adminer数据库管理工具（可选）
  adminer:
    image: adminer:latest
    container_name: restart-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - restart-network
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  # Redis Commander（可选）
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: restart-redis-commander
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: "local:redis:6379"
    networks:
      - restart-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  restart-network:
    driver: bridge
